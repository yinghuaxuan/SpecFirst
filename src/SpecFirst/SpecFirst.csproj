<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>Latest</LangVersion>
    <Nullable>enable</Nullable>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <AssemblyName>SpecFirst</AssemblyName>
    <RootNamespace>SpecFirst</RootNamespace>
    <IncludeSymbols>False</IncludeSymbols>
    <NoWarn>$(NoWarn);NU5128</NoWarn>
    <Description>The source generator to auto generate tests from decision tables written in markdown files. It requires two more packages to work: the package to parse markdown decision tables into decision table objects; and the package to generate tests for the target testing framework</Description>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>1.30.0</Version>
    <Company></Company>
    <Product></Product>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/yinghuaxuan/spec-first</PackageProjectUrl>
    <RepositoryUrl>https://github.com/yinghuaxuan/spec-first</RepositoryUrl>
    <PackageTags>source generator</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis" Version="3.8.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.1" PrivateAssets="all" />
    <PackageReference Include="SpecFirst.Core" Version="1.3.0" />
    <PackageReference Update="NETStandard.Library" PrivateAssets="all" />
  </ItemGroup>

  <Target Name="AddNuGetDlls" BeforeTargets="_GetPackageFiles">
    <!-- Merge the collection of PackageReference and Assemblies using the NuGetPackageId key.
           This produces a new list containing the DLL path and the "IncludeInPackage" metadata-->
    <JoinItems Left="@(ResolvedCompileFileDefinitions)" LeftKey="NuGetPackageId" LeftMetadata="*" Right="@(PackageReference)" RightKey="" RightMetadata="*" ItemSpecToUse="Left">
      <Output TaskParameter="JoinResult" ItemName="_PackagesToPack" />
    </JoinItems>

    <ItemGroup>
      <!-- Remove NETStandard DLLs -->
      <_PackagesToPack Remove="@(_PackagesToPack)" Condition="%(NuGetPackageId) == 'NETStandard.Library'" />
    </ItemGroup>

    <Message Importance="High" Text="Adding DLLs from the following packages: @(_PackagesToPack->'%(NuGetPackageId)')" />

    <ItemGroup>
      <!-- Update the collection of items to pack with the DLLs from the NuGet packages -->
      <None Include="@(_PackagesToPack)" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

      <!-- Add the DLL produced by the current project to the NuGet package -->
      <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
  </Target>
</Project>
